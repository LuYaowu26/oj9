#include<stdio.h>
#pragma warning(disable:4996)
int n, m;
int luxian[1050000][3] = { 0 };//0终点 1时间 2价格//
int i, j, k = 0;
int time, money,aimtime,cheapest=2147400000;
int begin,end;
int begin1;
int head[65540] = { 0 };//用于记录这个点指向了多少个点//
int path[65540] = { 0 };//假设从begin到end最坏情况有65540个节点//
int flag = 0;
int headtime[65540];
int headmoney[65540];

int dfs(int v, int nowtime, int nowmoney,int jiedian,int end)
{
	path[jiedian] = v;//第x个节点为v//
	if (nowmoney > cheapest||nowtime>aimtime)//时间或者钱超了都停止//
		return 0;
	if (v == end)//到达目标节点 
	{
		if (nowmoney < cheapest)
			cheapest = nowmoney;
		return 0;
	}
	
	for (int i = head[v]; i < head[v+1]; i++)//这个点有多少条边指向外面//
	{
		if (head[v] < nowtime)
			break;
		else
		head[v] = nowtime;
		//flag = 0;
        //避免访问同一个节点//
		/*for (int j = 0; j < jiedian; j++)
		{
			if (path[j] == luxian[i][0])
			{
				flag = 1;
				break;
			}
		}
		if (flag == 1)//如果重复，就跳过这个点
			continue;*/
		dfs(luxian[i][0], nowtime + luxian[i][1], nowmoney + luxian[i][2], jiedian + 1,end);
	}
}
int main()
{
	int lastpoint=0,nowpoint;
	scanf("%d %d", &n, &m);//输入节点数n，边数m//
	int sum = 0;
	int nowbegin = 0;
	for (i = 0; i < 65540; i++)
	{
		headtime[i] = 2000000000;
		headmoney[i]= 2000000000;
	}
	for (int i = 0; i < m; i++)
	{
		scanf("%d %d %d %d",&begin, &luxian[i][0], &luxian[i][1], &luxian[i][2]);//起点终点时间价格
		if (i == 0)
		{
			for (int j = 0; j <= begin; j++)
				head[j] = 0;
		}
		if (begin != nowbegin)
		{
			for (int j = nowbegin + 1; j <= begin; j++)
				head[j] = i;
			nowbegin = begin;
		}
	}	
	for (int j = begin + 1; j < n; j++)
		head[j] = m ;
	scanf("%d %d %d",&begin1,&end,&aimtime);
			/*for (i = 0; i < n; i++)
			printf("%d ", head[i]);*/
	dfs(begin1,0,0,0,end);//深度优先搜索开始//
	if (cheapest >= 2147400000)
		printf("-1");
	else
	printf("%d", cheapest);
	return 0;
}
/*
4 3
0 1 1 1
0 2 1 1
2 3 1 1
0 3 3
*/
/*
4 4
0 1 1 1
1 2 1 1
2 3 1 1
3 4 1 1
0 3 5
*/
